import 'package:spectra_flutter/core/core.dart';
import 'package:flex_color_scheme/flex_color_scheme.dart';
import 'package:flutter/material.dart';

class TAppTheme {
  TAppTheme._();

  static ThemeData lightTheme = FlexThemeData.light(
    colors: const FlexSchemeColor(
      primary: Color(0xff018f45),
      primaryContainer: Color(0xffd0e4ff),
      secondary: Color(0xfff44236),
      secondaryContainer: Color(0xffffdbcf),
      tertiary: Color(0xff006875),
      tertiaryContainer: Color(0xff95f0ff),
      appBarColor: Color(0xffffdbcf),
      error: Color(0xffb00020),
    ),
    surfaceMode: FlexSurfaceMode.levelSurfacesLowScaffold,
    blendLevel: 10,
    tabBarStyle: FlexTabBarStyle.forAppBar,
    appBarStyle: FlexAppBarStyle.scaffoldBackground,
    textTheme: TTextTheme.lightTextTheme,
    subThemesData: const FlexSubThemesData(
      interactionEffects: true,
      tintedDisabledControls: true,
      blendOnLevel: 20,
      blendOnColors: false,
      useMaterial3Typography: true,
      useM2StyleDividerInM3: true,
      splashType: FlexSplashType.inkSplash,
      elevatedButtonRadius: 10,
      inputDecoratorIsFilled: false,
      inputDecoratorUnfocusedBorderIsColored: false,
      alignedDropdown: true,
      defaultRadius: 10,
      inputDecoratorRadius: 10,
      inputDecoratorBorderType: FlexInputBorderType.outline,
      inputDecoratorFocusedBorderWidth: 1,
      chipRadius: 10,
      dialogBackgroundSchemeColor: SchemeColor.surface,
      chipSelectedSchemeColor: SchemeColor.primaryContainer,
      useInputDecoratorThemeInDialogs: true,
      navigationBarIndicatorOpacity: 0,
      searchBarElevation: 0,
      searchViewElevation: 0,
      bottomNavigationBarMutedUnselectedLabel: true,
      bottomNavigationBarMutedUnselectedIcon: true,
      bottomNavigationBarType: BottomNavigationBarType.fixed,
      bottomNavigationBarElevation: 8,
      bottomNavigationBarLabelTextStyle: TextStyle(
        fontSize: 12,
        fontFamily: 'GeneralSans',
      ),
      segmentedButtonBorderWidth: .5,
      segmentedButtonRadius: 8,
      segmentedButtonSchemeColor: SchemeColor.primary,
      segmentedButtonBorderSchemeColor: SchemeColor.outlineVariant,
      segmentedButtonUnselectedSchemeColor: SchemeColor.surface,
      segmentedButtonSelectedForegroundSchemeColor: SchemeColor.white,
      bottomNavigationBarSelectedLabelSize: 12,
      bottomNavigationBarUnselectedLabelSize: 12,
      bottomSheetRadius: 16,
      bottomSheetBackgroundColor: SchemeColor.white,
      bottomNavigationBarSelectedLabelSchemeColor: SchemeColor.black,
      bottomNavigationBarSelectedIconSchemeColor: SchemeColor.black,
      appBarScrolledUnderElevation: 0,
      filledButtonRadius: 10,
      outlinedButtonRadius: 10,
      elevatedButtonSchemeColor: SchemeColor.primary,
      //elevatedButtonSecondarySchemeColor: SchemeColor.secondary,
      elevatedButtonTextStyle: WidgetStatePropertyAll(
        TextStyle(
          fontSize: 17,
          fontWeight: FontWeight.bold,
          fontFamily: 'GeneralSans',
        ),
      ),
      outlinedButtonTextStyle: WidgetStatePropertyAll(
        TextStyle(
          fontSize: 17,
          fontWeight: FontWeight.bold,
          fontFamily: 'GeneralSans',
        ),
      ),
      filledButtonTextStyle: WidgetStatePropertyAll(
        TextStyle(
          fontSize: 17,
          fontWeight: FontWeight.bold,
          fontFamily: 'GeneralSans',
        ),
      ),
    ),
    visualDensity: FlexColorScheme.comfortablePlatformDensity,
    useMaterial3: true,
    swapLegacyOnMaterial3: true,
    fontFamily: 'Satoshi',
  );

  static ThemeData darkTheme = FlexThemeData.dark(
    colors: const FlexSchemeColor(
      primary: Color(0xff018f45),
      primaryContainer: Color(0xff00325b),
      secondary: Color(0xfff44236),
      secondaryContainer: Color(0xffffdbcf),
      tertiary: Color(0xff86d2e1),
      tertiaryContainer: Color(0xff004e59),
      appBarColor: Color(0xfff44236),
      error: Color(0xffcf6679),
    ),
    surfaceMode: FlexSurfaceMode.levelSurfacesLowScaffold,
    blendLevel: 10,
    tabBarStyle: FlexTabBarStyle.forAppBar,
    appBarStyle: FlexAppBarStyle.scaffoldBackground,
    textTheme: TTextTheme.darkTextTheme,
    subThemesData: const FlexSubThemesData(
      interactionEffects: true,
      tintedDisabledControls: true,
      blendOnLevel: 20,
      blendOnColors: false,
      useMaterial3Typography: true,
      useM2StyleDividerInM3: true,
      chipSelectedSchemeColor: SchemeColor.primaryContainer,
      splashType: FlexSplashType.inkSplash,
      elevatedButtonRadius: 10,
      inputDecoratorIsFilled: false,
      inputDecoratorUnfocusedBorderIsColored: false,
      alignedDropdown: true,
      defaultRadius: 10,
      inputDecoratorRadius: 10,
      inputDecoratorBorderType: FlexInputBorderType.outline,
      inputDecoratorFocusedBorderWidth: 1,
      dialogBackgroundSchemeColor: SchemeColor.surface,
      useInputDecoratorThemeInDialogs: true,
      appBarScrolledUnderElevation: 0,
      filledButtonRadius: 10,
      chipRadius: 10,
      segmentedButtonBorderWidth: .5,
      segmentedButtonRadius: 8,
      segmentedButtonSchemeColor: SchemeColor.primary,
      segmentedButtonBorderSchemeColor: SchemeColor.outlineVariant,
      segmentedButtonUnselectedSchemeColor: SchemeColor.surface,
      segmentedButtonSelectedForegroundSchemeColor: SchemeColor.white,
      navigationBarIndicatorOpacity: 0,
      bottomNavigationBarMutedUnselectedLabel: true,
      bottomNavigationBarMutedUnselectedIcon: true,
      bottomNavigationBarElevation: 8,
      bottomNavigationBarType: BottomNavigationBarType.fixed,
      bottomNavigationBarLabelTextStyle: TextStyle(
        fontSize: 12,
        fontFamily: 'GeneralSans',
      ),
      bottomNavigationBarSelectedLabelSize: 12,
      bottomNavigationBarUnselectedLabelSize: 12,
      bottomNavigationBarSelectedLabelSchemeColor: SchemeColor.white,
      bottomNavigationBarSelectedIconSchemeColor: SchemeColor.white,
      outlinedButtonRadius: 10,
      elevatedButtonTextStyle: WidgetStatePropertyAll(
        TextStyle(
          fontSize: 17,
          fontWeight: FontWeight.bold,
          fontFamily: 'GeneralSans',
        ),
      ),
      outlinedButtonTextStyle: WidgetStatePropertyAll(
        TextStyle(
          fontSize: 17,
          fontWeight: FontWeight.bold,
          fontFamily: 'GeneralSans',
        ),
      ),
      filledButtonTextStyle: WidgetStatePropertyAll(
        TextStyle(
          fontSize: 17,
          fontWeight: FontWeight.bold,
          fontFamily: 'GeneralSans',
        ),
      ),
    ),
    visualDensity: FlexColorScheme.comfortablePlatformDensity,
    useMaterial3: true,
    swapLegacyOnMaterial3: true,
    fontFamily: 'Satoshi',
  );
}
